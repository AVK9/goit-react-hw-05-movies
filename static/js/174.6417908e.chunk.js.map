{"version":3,"file":"static/js/174.6417908e.chunk.js","mappings":"yOACMA,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAe,+NAGJC,EAAAA,EAAAA,SAAAA,QAAyB,+BACxCA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,eAAe,EACfC,SAAU,MAGL,IAAMC,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACFZ,EAAAA,EAAAA,IAAU,qBAAsBL,GAAQ,OAC7C,OAD6Ca,EAAAE,EAAAG,KAAvDJ,EAAID,EAAJC,KACRK,QAAQC,IAAIN,GAAMC,EAAAM,OAAA,SACXP,GAAI,wBAAAC,EAAAO,OAAA,GAAAV,EAAA,KACZ,kBAJuB,OAAAH,EAAAc,MAAA,KAAAC,UAAA,K,6BC2BxB,EAnCa,WACX,IAAAC,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAgB5B,OAfAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,eAAA3B,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAE,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACA,OAAnBa,GAAa,GAAMf,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEET,IAAc,KAAD,EAA1BM,EAAIC,EAAAG,KACVgB,EAAYpB,EAAKuB,SAAStB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAuB,GAAAvB,EAAA,SAE1BI,QAAQC,IAAGL,EAAAuB,IAAQ,QAEC,OAFDvB,EAAAC,KAAA,GAEnBc,GAAa,GAAOf,EAAAwB,OAAA,6BAAAxB,EAAAO,OAAA,GAAAV,EAAA,wBAEvB,kBAViB,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KAWlBY,GACF,GAAG,IACHjB,QAAQC,IAAIS,IAEVW,EAAAA,EAAAA,MAACC,EAAAA,GAAS,CAAAC,SAAA,EACRC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iDACJC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAAAF,SACFT,EAASY,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAOC,EAAIH,EAAJG,KAAMC,EAAWJ,EAAXI,YAAW,OAC3CP,EAAAA,EAAAA,KAACQ,EAAAA,GAAS,CAERH,MAAOA,EACPC,KAAMA,EACNC,YAAaA,GAHRH,EAIL,QAKZ,C","sources":["service/service.js","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkNTc2NzBmMzExOWVmNDc5ODFjMDljYmYxY2IzZDJkMSIsInN1YiI6IjY1ODJhNGVjNTViYzM1NTcxNTE3YjQ0MSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.FGASUnS6pTqDNKCG13-tA5RbW9nYFMwY9-2qdwNpLWo'\n  }\n};\nexport default axios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  include_adult: false,\n  language: 'uk',\n};\n//----------------------------------------------------\nexport const getTrending = async () => {\n  const { data } = await axios.get('/trending/all/week', options)\n  console.log(data);\n  return data;\n};\n// getTrending()\n//----------------------------------------------------\nexport const searchMovies = async (query, page) => {\n  const { data } = await axios.get(`/search/movie?query=${query}&page=${page}`, options)\n  console.log(data);\n  return data;\n};\n// searchMovies('Cat', 3)\n//----------------------------------------------------\nexport const getMovieDetails = async (movie_id) => {\n  const { data } = await axios.get(`/movie/${movie_id}`, options)\n  console.log(data);\n  return data;\n};\n// getMovieDetails(695721)\n//----------------------------------------------------\nexport const getMovieCredits = async (movie_id, page) => {\n  const { data } = await axios.get(`/movie/${movie_id}/reviews?page=${page}`, options)\n  console.log(data);\n  return data;\n};\n// getMovieCredits(695721, 1)\n","import { getTrending } from '../service/service';\nimport { Grid, Container } from 'components';\nimport { Trendings } from 'components';\nimport { useEffect, useState } from 'react';\n// import { toast } from 'react-toastify';\n\nconst Home = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [Trending, setTrending] = useState([]);\n  useEffect(() => {\n    const dataTrending = async () => {\n      setIsLoading(true);\n      try {\n        const data = await getTrending();\n        setTrending(data.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    dataTrending();\n  }, []);\n  console.log(isLoading);\n  return (\n    <Container>\n      <h1>У тренді</h1>\n      <Grid>\n        {Trending.map(({ id, title, name, poster_path }) => (\n          <Trendings\n            key={id}\n            title={title}\n            name={name}\n            poster_path={poster_path}\n          />\n        ))}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Home;\n"],"names":["options","method","headers","accept","Authorization","axios","include_adult","language","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","sent","console","log","abrupt","stop","apply","arguments","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","Trending","setTrending","useEffect","dataTrending","results","t0","finish","_jsxs","Container","children","_jsx","Grid","map","_ref2","id","title","name","poster_path","Trendings"],"sourceRoot":""}